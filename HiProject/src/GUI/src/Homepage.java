/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.src;

import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.time.LocalDate;
import java.util.*;

import Backend.*;
import Exceptions.UserDoesntExistException;

import java.lang.reflect.Array;

import javax.swing.*;
import javax.swing.plaf.basic.BasicListUI;

public class Homepage extends javax.swing.JFrame {
    private static Serialization serialization = new Serialization(String.format("%s\\HiProject.data", System.getProperty("user.dir")));
    private static HiProject hiProject = serialization.load();
    private static User connectedUser;
    private Map<Integer, Project> projectsList;
    private static ArrayList<String> titles = new ArrayList<>();
    private DefaultListModel listModelTasks;
    private DefaultListModel listModelUsers;
    private int posX, posY; //Mouse location on the X and Y axis.
    private ArrayList<String> projectsmta(ArrayList<String> ptitles) {
        ptitles.clear();
        ptitles.add("< Please Select a Project >");
        for (Map.Entry<Integer, Project> e : projectsList.entrySet()) {
            ptitles.add(e.getValue().getTitle());
        }
        return ptitles;
    }

    /**
     * Creates new form Homepage
     */
    public Homepage(User connectedUser) {
        //try {
        Homepage.connectedUser = connectedUser;
        /*} catch (UserDoesntExistException e) {
            e.printStackTrace();
        }*/
        projectsList = connectedUser.getProjects().getProjects();
        initComponents();
        setSelectedProjectValuesText();
        setDashboardValues();
        checksToFillTasksLists();
        checksToFillUsersLists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMenuPanel = new javax.swing.JPanel();
        projectListComboBox = new javax.swing.JComboBox<>();
        addProjectButton = new javax.swing.JLabel();
        removeProjectButton = new javax.swing.JLabel();
        editProfileButton = new javax.swing.JLabel();
        editProfileLabel = new javax.swing.JLabel();
        switchUserButton = new javax.swing.JLabel();
        switchUserLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JLabel();
        exitLabel = new javax.swing.JLabel();
        viewProjectButton = new javax.swing.JLabel();
        viewDashboardButton = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dashboardPanel = new javax.swing.JPanel();
        completedProjectsLabel = new javax.swing.JLabel();
        completedProjectsValueLabel = new javax.swing.JLabel();
        ongoingProjectsLabel = new javax.swing.JLabel();
        ongoingProjectsValueLabel = new javax.swing.JLabel();
        lateProjectsLabel = new javax.swing.JLabel();
        lateProjectsValueLabel = new javax.swing.JLabel();
        inNeedOfAttentionLabel = new javax.swing.JLabel();
        inoaProject2ValueLabel = new javax.swing.JLabel();
        inoaProject3ValueLabel = new javax.swing.JLabel();
        inoaProject1ValueLabel = new javax.swing.JLabel();
        biggestProjectLabel = new javax.swing.JLabel();
        bpPeopleInvolvedLabel = new javax.swing.JLabel();
        bpPeopleInvolvedValueLabel = new javax.swing.JLabel();
        bpCompletedTasksLabel = new javax.swing.JLabel();
        bpNameValueLabel = new javax.swing.JLabel();
        bpCompletedTasksValueLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        dashboardBackground = new javax.swing.JLabel();
        selectedProjectPanel = new javax.swing.JPanel();
        sppSelectedProjectDescriptionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sppSelectedProjectDescriptionValue = new javax.swing.JTextArea();
        sppSelectedProjectEditProjectButtonLabel = new javax.swing.JLabel();
        sppSelectedProjectEditProjectButton = new javax.swing.JLabel();
        sppSelectedProjectStateValue = new javax.swing.JLabel();
        sppSelectedProjectStartDateValue = new javax.swing.JLabel();
        sppSelectedProjectStartDateLabel = new javax.swing.JLabel();
        sppSelectedProjectEndDateValue = new javax.swing.JLabel();
        sppSelectedProjectEndDateLabel = new javax.swing.JLabel();
        sppSelectedProjectStateLabel = new javax.swing.JLabel();
        sppSelectedProjectOwner = new javax.swing.JLabel();
        sppSelectedProjectName = new javax.swing.JLabel();
        sppSelectedProjectAssociatedUsersLabel = new javax.swing.JLabel();
        addUserToProject = new javax.swing.JLabel();
        addUserToProjectLabel = new javax.swing.JLabel();
        removeUserFromProject = new javax.swing.JLabel();
        removeUserFromProjectLabel = new javax.swing.JLabel();
        markAsCompleteButton = new javax.swing.JLabel();
        addTasksListsButton = new javax.swing.JLabel();
        tasksTableLabel = new javax.swing.JLabel();
        removeTasksListsButton = new javax.swing.JLabel();
        editTasksListsButton = new javax.swing.JLabel();
        removeTaskButton = new javax.swing.JLabel();
        addTaskButton = new javax.swing.JLabel();
        viewTaskButton = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tasksListsLabel = new javax.swing.JLabel();
        tasksListsScrollPane = new javax.swing.JScrollPane();
        tasksListsList = new javax.swing.JList<>();
        associatedUsersScrollPane = new javax.swing.JScrollPane();
        sppSelectedProjectAssociatedUsersList = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        selectedProjectBackground = new javax.swing.JLabel();
        homepageBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Homepage");
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(null);

        mainMenuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Welcome to HiProject, " + connectedUser.getName() + "."));
        mainMenuPanel.setOpaque(false);
        mainMenuPanel.setLayout(null);

        projectListComboBox.setModel(new javax.swing.DefaultComboBoxModel(projectsmta(titles).toArray()));
        projectListComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (projectListComboBox.getSelectedIndex() == 0) {
                    dashboardPanel.setVisible(true);
                    selectedProjectPanel.setVisible(false);
                    viewProjectButton.setVisible(true);
                    viewDashboardButton.setVisible(false);
                }
                setSelectedProjectValuesText();
                disableEditIfNotOwner(connectedUser);
            }
        });
        mainMenuPanel.add(projectListComboBox);
        projectListComboBox.setBounds(110, 40, 220, 30);

        addProjectButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\Plus.png", System.getProperty("user.dir"))));
        addProjectButton.setToolTipText("Create a new Project");
        addProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProjectButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(addProjectButton);
        addProjectButton.setBounds(350, 40, 30, 30);

        removeProjectButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\Minus.png", System.getProperty("user.dir"))));
        removeProjectButton.setToolTipText("Delete the selected Project");
        removeProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeProjectButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(removeProjectButton);
        removeProjectButton.setBounds(390, 40, 30, 30);

        editProfileButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\User.png", System.getProperty("user.dir"))));
        editProfileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editProfileButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(editProfileButton);
        editProfileButton.setBounds(1082, 30, 30, 40);

        editProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editProfileLabel.setText("Edit Profile");
        mainMenuPanel.add(editProfileLabel);
        editProfileLabel.setBounds(1070, 70, 60, 14);

        switchUserButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\SwitchUser.png", System.getProperty("user.dir"))));
        switchUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchUserButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(switchUserButton);
        switchUserButton.setBounds(1170, 30, 30, 40);

        switchUserLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        switchUserLabel.setText("Switch User");
        mainMenuPanel.add(switchUserLabel);
        switchUserLabel.setBounds(1150, 70, 70, 14);

        exitButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\Exit.png", System.getProperty("user.dir"))));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(exitButton);
        exitButton.setBounds(1250, 30, 40, 40);

        exitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel.setText("Exit");
        mainMenuPanel.add(exitLabel);
        exitLabel.setBounds(1250, 70, 30, 14);

        viewProjectButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\ViewProject2.png", System.getProperty("user.dir"))));
        viewProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewProjectButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(viewProjectButton);
        viewProjectButton.setBounds(530, 21, 270, 70);

        viewDashboardButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\ViewDashboard2.png", System.getProperty("user.dir"))));
        viewDashboardButton.setVisible(false);
        viewDashboardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewDashboardButtonMouseClicked(evt);
            }
        });
        mainMenuPanel.add(viewDashboardButton);
        viewDashboardButton.setBounds(530, 20, 270, 70);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Projects:");
        mainMenuPanel.add(jLabel1);
        jLabel1.setBounds(30, 40, 100, 30);

        getContentPane().add(mainMenuPanel);
        mainMenuPanel.setBounds(10, 6, 1320, 100);

        dashboardPanel.setBackground(new java.awt.Color(36, 80, 218));
        dashboardPanel.setOpaque(false);
        dashboardPanel.setLayout(null);

        completedProjectsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        completedProjectsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        completedProjectsLabel.setText("Completed Projects");
        dashboardPanel.add(completedProjectsLabel);
        completedProjectsLabel.setBounds(90, 90, 326, 29);

        completedProjectsValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        completedProjectsValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        completedProjectsValueLabel.setText("completedProjectsValueLabel");
        dashboardPanel.add(completedProjectsValueLabel);
        completedProjectsValueLabel.setBounds(90, 150, 326, 25);

        ongoingProjectsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ongoingProjectsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ongoingProjectsLabel.setText("Ongoing Projects");
        dashboardPanel.add(ongoingProjectsLabel);
        ongoingProjectsLabel.setBounds(500, 90, 326, 29);

        ongoingProjectsValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        ongoingProjectsValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ongoingProjectsValueLabel.setText("ongoingProjectsValueLabel");
        dashboardPanel.add(ongoingProjectsValueLabel);
        ongoingProjectsValueLabel.setBounds(500, 140, 326, 25);

        lateProjectsLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lateProjectsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lateProjectsLabel.setText("Late Projects");
        dashboardPanel.add(lateProjectsLabel);
        lateProjectsLabel.setBounds(890, 90, 326, 29);

        lateProjectsValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lateProjectsValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lateProjectsValueLabel.setText("lateProjectsValueLabel");
        dashboardPanel.add(lateProjectsValueLabel);
        lateProjectsValueLabel.setBounds(890, 140, 326, 25);

        inNeedOfAttentionLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        inNeedOfAttentionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inNeedOfAttentionLabel.setText("In Need of Attention");
        dashboardPanel.add(inNeedOfAttentionLabel);
        inNeedOfAttentionLabel.setBounds(170, 320, 326, 29);

        inoaProject2ValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        inoaProject2ValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inoaProject2ValueLabel.setText("inoaProject2ValueLabel");
        dashboardPanel.add(inoaProject2ValueLabel);
        inoaProject2ValueLabel.setBounds(130, 520, 420, 40);

        inoaProject3ValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        inoaProject3ValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inoaProject3ValueLabel.setText("inoaProject3ValueLabel");
        dashboardPanel.add(inoaProject3ValueLabel);
        inoaProject3ValueLabel.setBounds(130, 630, 420, 40);

        inoaProject1ValueLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        inoaProject1ValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inoaProject1ValueLabel.setText("inoaProject1ValueLabel");
        dashboardPanel.add(inoaProject1ValueLabel);
        inoaProject1ValueLabel.setBounds(130, 420, 420, 40);

        biggestProjectLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        biggestProjectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        biggestProjectLabel.setText("Biggest Project");
        dashboardPanel.add(biggestProjectLabel);
        biggestProjectLabel.setBounds(820, 320, 326, 29);

        bpPeopleInvolvedLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        bpPeopleInvolvedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpPeopleInvolvedLabel.setText("People Involved in Project:");
        dashboardPanel.add(bpPeopleInvolvedLabel);
        bpPeopleInvolvedLabel.setBounds(830, 490, 326, 28);

        bpPeopleInvolvedValueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bpPeopleInvolvedValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpPeopleInvolvedValueLabel.setText("bpPeopleInvolvedValueLabel");
        dashboardPanel.add(bpPeopleInvolvedValueLabel);
        bpPeopleInvolvedValueLabel.setBounds(830, 550, 326, 22);

        bpCompletedTasksLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        bpCompletedTasksLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpCompletedTasksLabel.setText("Completed Tasks in Project:");
        dashboardPanel.add(bpCompletedTasksLabel);
        bpCompletedTasksLabel.setBounds(830, 620, 326, 25);

        bpNameValueLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bpNameValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpNameValueLabel.setText("bpNameValueLabel");
        dashboardPanel.add(bpNameValueLabel);
        bpNameValueLabel.setBounds(820, 390, 326, 40);

        bpCompletedTasksValueLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bpCompletedTasksValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpCompletedTasksValueLabel.setText("bpCompletedTasksValueLabel");
        dashboardPanel.add(bpCompletedTasksValueLabel);
        bpCompletedTasksValueLabel.setBounds(830, 690, 326, 22);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        dashboardPanel.add(jSeparator2);
        jSeparator2.setBounds(640, 240, 10, 540);
        dashboardPanel.add(jSeparator3);
        jSeparator3.setBounds(20, 240, 1280, 10);

        dashboardBackground.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\DashboardBackground.png", System.getProperty("user.dir"))));
        dashboardPanel.add(dashboardBackground);
        dashboardBackground.setBounds(0, 0, 1320, 800);

        getContentPane().add(dashboardPanel);
        dashboardPanel.setBounds(10, 110, 1320, 800);

        selectedProjectPanel.setOpaque(false);
        selectedProjectPanel.setLayout(null);

        sppSelectedProjectDescriptionLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sppSelectedProjectDescriptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectDescriptionLabel.setText("Project Description");
        selectedProjectPanel.add(sppSelectedProjectDescriptionLabel);
        sppSelectedProjectDescriptionLabel.setBounds(450, 160, 330, 30);

        jScrollPane1.setOpaque(false);
        jScrollPane1.setBorder(null);

        sppSelectedProjectDescriptionValue.setColumns(20);
        sppSelectedProjectDescriptionValue.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sppSelectedProjectDescriptionValue.setLineWrap(true);
        sppSelectedProjectDescriptionValue.setRows(5);
        sppSelectedProjectDescriptionValue.setText("codigo get description\n");
        sppSelectedProjectDescriptionValue.setBorder(null);
        sppSelectedProjectDescriptionValue.setFocusable(false);
        sppSelectedProjectDescriptionValue.setOpaque(false);
        jScrollPane1.setViewportView(sppSelectedProjectDescriptionValue);

        selectedProjectPanel.add(jScrollPane1);
        jScrollPane1.setBounds(450, 220, 330, 150);

        sppSelectedProjectEditProjectButtonLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sppSelectedProjectEditProjectButtonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectEditProjectButtonLabel.setText("Edit Project");
        selectedProjectPanel.add(sppSelectedProjectEditProjectButtonLabel);
        sppSelectedProjectEditProjectButtonLabel.setBounds(1210, 100, 80, 30);

        sppSelectedProjectEditProjectButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\EditButton64px.png", System.getProperty("user.dir"))));
        sppSelectedProjectEditProjectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sppSelectedProjectEditProjectButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(sppSelectedProjectEditProjectButton);
        sppSelectedProjectEditProjectButton.setBounds(1220, 30, 70, 70);

        sppSelectedProjectStateValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectStateValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectStateValue.setText("code ---");
        selectedProjectPanel.add(sppSelectedProjectStateValue);
        sppSelectedProjectStateValue.setBounds(90, 210, 160, 30);

        sppSelectedProjectStartDateValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectStartDateValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sppSelectedProjectStartDateValue.setText("codigo");
        selectedProjectPanel.add(sppSelectedProjectStartDateValue);
        sppSelectedProjectStartDateValue.setBounds(240, 280, 200, 40);

        sppSelectedProjectStartDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectStartDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sppSelectedProjectStartDateLabel.setText("Project started on:");
        selectedProjectPanel.add(sppSelectedProjectStartDateLabel);
        sppSelectedProjectStartDateLabel.setBounds(10, 280, 210, 40);

        sppSelectedProjectEndDateValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectEndDateValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sppSelectedProjectEndDateValue.setText("codigo");
        selectedProjectPanel.add(sppSelectedProjectEndDateValue);
        sppSelectedProjectEndDateValue.setBounds(240, 330, 200, 40);

        sppSelectedProjectEndDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectEndDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sppSelectedProjectEndDateLabel.setText("Project should end by:");
        selectedProjectPanel.add(sppSelectedProjectEndDateLabel);
        sppSelectedProjectEndDateLabel.setBounds(10, 330, 210, 40);

        sppSelectedProjectStateLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sppSelectedProjectStateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectStateLabel.setText("Project Status");
        selectedProjectPanel.add(sppSelectedProjectStateLabel);
        sppSelectedProjectStateLabel.setBounds(70, 160, 210, 30);

        sppSelectedProjectOwner.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sppSelectedProjectOwner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectOwner.setText("codigo: settxt(\"owned by \" + owner)");
        selectedProjectPanel.add(sppSelectedProjectOwner);
        sppSelectedProjectOwner.setBounds(460, 90, 310, 40);

        sppSelectedProjectName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        sppSelectedProjectName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectName.setText("codigo: txt getprojename");
        selectedProjectPanel.add(sppSelectedProjectName);
        sppSelectedProjectName.setBounds(310, 19, 610, 60);

        sppSelectedProjectAssociatedUsersLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sppSelectedProjectAssociatedUsersLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sppSelectedProjectAssociatedUsersLabel.setText("Associated Users");
        selectedProjectPanel.add(sppSelectedProjectAssociatedUsersLabel);
        sppSelectedProjectAssociatedUsersLabel.setBounds(940, 160, 260, 30);

        addUserToProject.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\AddUser.png", System.getProperty("user.dir"))));
        addUserToProject.setToolTipText("");
        addUserToProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserToProjectMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(addUserToProject);
        addUserToProject.setBounds(1230, 220, 40, 40);

        addUserToProjectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addUserToProjectLabel.setText("Add User");
        selectedProjectPanel.add(addUserToProjectLabel);
        addUserToProjectLabel.setBounds(1220, 260, 60, 14);

        removeUserFromProject.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\RemoveUser.png", System.getProperty("user.dir"))));
        removeUserFromProject.setToolTipText("");
        removeUserFromProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeUserFromProjectMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(removeUserFromProject);
        removeUserFromProject.setBounds(1230, 300, 40, 50);

        removeUserFromProjectLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeUserFromProjectLabel.setText("Remove User");
        selectedProjectPanel.add(removeUserFromProjectLabel);
        removeUserFromProjectLabel.setBounds(1210, 350, 80, 14);

        markAsCompleteButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\Complete.png", System.getProperty("user.dir"))));
        markAsCompleteButton.setToolTipText("Mark project as complete!");
        markAsCompleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                markAsCompleteButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(markAsCompleteButton);
        markAsCompleteButton.setBounds(270, 210, 30, 30);

        addTasksListsButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\PlusCircle.png", System.getProperty("user.dir"))));
        addTasksListsButton.setToolTipText("Create a new Tasks List");
        addTasksListsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTasksListsButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(addTasksListsButton);
        addTasksListsButton.setBounds(124, 720, 40, 40);

        tasksTableLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tasksTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tasksTableLabel.setText("Tasks");
        selectedProjectPanel.add(tasksTableLabel);
        tasksTableLabel.setBounds(380, 430, 760, 22);

        removeTasksListsButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeTasksListsButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\MinusCircle.png", System.getProperty("user.dir"))));
        removeTasksListsButton.setToolTipText("Delete the selected Tasks List");
        removeTasksListsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeTasksListsButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(removeTasksListsButton);
        removeTasksListsButton.setBounds(242, 720, 40, 40);

        editTasksListsButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\EditButton32px.png", System.getProperty("user.dir"))));
        editTasksListsButton.setToolTipText("Change the name of the selected Tasks List");
        editTasksListsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editTasksListsButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(editTasksListsButton);
        editTasksListsButton.setBounds(186, 720, 40, 40);

        removeTaskButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\MinusCircle64.png", System.getProperty("user.dir"))));
        removeTaskButton.setToolTipText("Delete selected Task");
        removeTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeTaskButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(removeTaskButton);
        removeTaskButton.setBounds(1180, 680, 70, 80);

        addTaskButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\PlusCircle64.png", System.getProperty("user.dir"))));
        addTaskButton.setToolTipText("Create a new Task");
        addTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTaskButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(addTaskButton);
        addTaskButton.setBounds(1180, 470, 70, 80);

        viewTaskButton.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\View64.png", System.getProperty("user.dir"))));
        viewTaskButton.setToolTipText("View and edit the selected Task");
        viewTaskButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewTaskButtonMouseClicked(evt);
            }
        });
        selectedProjectPanel.add(viewTaskButton);
        viewTaskButton.setBounds(1180, 580, 70, 70);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane2.setViewportView(jTable1);

        selectedProjectPanel.add(jScrollPane2);
        jScrollPane2.setBounds(380, 470, 760, 290);

        tasksListsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tasksListsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tasksListsLabel.setText("Tasks Lists");
        selectedProjectPanel.add(tasksListsLabel);
        tasksListsLabel.setBounds(120, 430, 160, 22);

        tasksListsList.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tasksListsScrollPane.setViewportView(tasksListsList);

        selectedProjectPanel.add(tasksListsScrollPane);
        tasksListsScrollPane.setBounds(120, 470, 160, 250);

        sppSelectedProjectAssociatedUsersList.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sppSelectedProjectAssociatedUsersList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        associatedUsersScrollPane.setViewportView(sppSelectedProjectAssociatedUsersList);

        selectedProjectPanel.add(associatedUsersScrollPane);
        associatedUsersScrollPane.setBounds(940, 220, 260, 150);
        selectedProjectPanel.add(jSeparator1);
        jSeparator1.setBounds(30, 390, 1260, 10);

        selectedProjectBackground.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\ProjectBackground.png", System.getProperty("user.dir"))));
        selectedProjectPanel.add(selectedProjectBackground);
        selectedProjectBackground.setBounds(0, 0, 1320, 800);

        getContentPane().add(selectedProjectPanel);
        selectedProjectPanel.setBounds(10, 110, 1320, 800);
        selectedProjectPanel.setVisible(false);

        homepageBackground.setIcon(new javax.swing.ImageIcon(String.format("%s\\Images\\DefaultBackground2.png", System.getProperty("user.dir"))));
        getContentPane().add(homepageBackground);
        homepageBackground.setBounds(0, 0, 1340, 925);

        setSize(new java.awt.Dimension(1340, 923));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProjectButtonMouseClicked
        NewProject newp = new NewProject();
        newp.setModal(true);
        newp.setVisible(true);
        updateHomepage();
    }//GEN-LAST:event_addProjectButtonMouseClicked

    private void removeProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeProjectButtonMouseClicked
        if (projectListComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a project first.", "Error", 0);
        } else {
            removeProject();
        }
    }//GEN-LAST:event_removeProjectButtonMouseClicked

    private void sppSelectedProjectEditProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sppSelectedProjectEditProjectButtonMouseClicked
        EditProject newep = new EditProject(this, true, getSelectedProject());
        newep.setVisible(true);
        updateHomepage();
    }//GEN-LAST:event_sppSelectedProjectEditProjectButtonMouseClicked

    private void viewProjectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewProjectButtonMouseClicked
        if (projectListComboBox.getSelectedIndex() != 0) {
            this.selectedProjectPanel.setVisible(true);
            this.dashboardPanel.setVisible(false);
            this.viewDashboardButton.setVisible(true);
            this.viewProjectButton.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a project before switching view.");
        }
    }//GEN-LAST:event_viewProjectButtonMouseClicked

    private void viewDashboardButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewDashboardButtonMouseClicked
        this.dashboardPanel.setVisible(true);
        this.selectedProjectPanel.setVisible(false);
        this.viewProjectButton.setVisible(true);
        this.viewDashboardButton.setVisible(false);
    }//GEN-LAST:event_viewDashboardButtonMouseClicked

    private void editProfileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editProfileButtonMouseClicked
        ManageUserAccount mua = new ManageUserAccount();
        mua.setModal(true);
        mua.setVisible(true);
    }//GEN-LAST:event_editProfileButtonMouseClicked

    private void switchUserButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchUserButtonMouseClicked
        int switchConfirmation = JOptionPane.showConfirmDialog(null, "You are about to end your session. Are you sure you want to continue?", "Switch user account", 0);
        switch (switchConfirmation) {
            case 0:
                this.dispose();
                LogInPage newlogin = new LogInPage();
                newlogin.setVisible(true);
                break;
            case 1:
            case 2:
                this.requestFocus();
                break;
        }
    }//GEN-LAST:event_switchUserButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        int exitConfirmation = JOptionPane.showConfirmDialog(null, "You are about to exit the application. Are you sure you want to continue?", "Exit Application", 0);
        switch (exitConfirmation) {
            case 0:
                System.exit(-1);
                break;
            case 1:
            case 2:
                this.requestFocus();
                break;
        }
    }//GEN-LAST:event_exitButtonMouseClicked

    private void addUserToProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserToProjectMouseClicked
        hiProject = serialization.load();
        JTextArea ta = new JTextArea(1, 25);
        Object[] options = {"Associate User", "Cancel"};
        switch (JOptionPane.showOptionDialog(null, new JScrollPane(ta), "Insert the user's EMAIL address", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, null)) {
            case JOptionPane.OK_OPTION:
                // check do email e adicionar
                serialization.save(hiProject);
                break;
        }
    }//GEN-LAST:event_addUserToProjectMouseClicked

    private void removeUserFromProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeUserFromProjectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_removeUserFromProjectMouseClicked

    private void markAsCompleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_markAsCompleteButtonMouseClicked
        ProjectsList tempProjectsList = hiProject.getProjects();
        tempProjectsList.getProject(getSelectedProject().getProjectID()).setProjectState(State.Finished);
        hiProject.setProjects(tempProjectsList);
        tempProjectsList = connectedUser.getProjects();
        tempProjectsList.getProject(getSelectedProject().getProjectID()).setProjectState(State.Finished);
        connectedUser.setProjects(tempProjectsList);
        serialization.save(hiProject);
        updateHomepage();
    }//GEN-LAST:event_markAsCompleteButtonMouseClicked

    private void editTasksListsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editTasksListsButtonMouseClicked
        hiProject = serialization.load();
        JTextArea ta = new JTextArea(1, 25);
        Object[] options = {"Change Name", "Cancel"};
        switch (JOptionPane.showOptionDialog(null, new JScrollPane(ta), "Input the new name of the selected Tasks List.", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, null)) {
            case JOptionPane.OK_OPTION:
                // check do email e adicionar
                serialization.save(hiProject);
                break;
        }
    }//GEN-LAST:event_editTasksListsButtonMouseClicked

    private void addTasksListsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTasksListsButtonMouseClicked
        hiProject = serialization.load();
        JTextArea ta = new JTextArea(1, 25);
        Object[] options = {"Create List", "Cancel"};
        switch (JOptionPane.showOptionDialog(null, new JScrollPane(ta), "Input the name of your new Tasks List.", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, null)) {
            case JOptionPane.OK_OPTION:
                ProjectsList tempProjects = connectedUser.getProjects();
                ArrayList<TasksList> tempArray = connectedUser.getProjects().getProject(getSelectedProject().getProjectID()).getLists();
                tempArray.add(new TasksList(ta.getText(), connectedUser, new ArrayList<Task>()));
                tempProjects.getProject(getSelectedProject().getProjectID()).setLists(tempArray);
                connectedUser.setProjects(tempProjects);
                serialization.save(hiProject);
                updateHomepage();
                break;
        }
    }//GEN-LAST:event_addTasksListsButtonMouseClicked

    private void removeTasksListsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeTasksListsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_removeTasksListsButtonMouseClicked

    private void addTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTaskButtonMouseClicked
        NewTask newt = new NewTask(this, true);
        newt.setVisible(true);
        updateHomepage();
    }//GEN-LAST:event_addTaskButtonMouseClicked

    private void viewTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewTaskButtonMouseClicked
        ViewAndEditTask newvet = new ViewAndEditTask(this, true);
        newvet.setVisible(true);
        updateHomepage();
    }//GEN-LAST:event_viewTaskButtonMouseClicked

    private void removeTaskButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeTaskButtonMouseClicked

    }//GEN-LAST:event_removeTaskButtonMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        posX = evt.getX();
        posY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        Point p = getLocation();
        setLocation(p.x + evt.getX() - posX, p.y + evt.getY() - posY);
    }//GEN-LAST:event_formMouseDragged

    public String inoaProjects1GetText(ArrayList<Task> tasks) {
        try {
            return (tasks.get(0).getTitle());
        } catch (IndexOutOfBoundsException e) {
            return ("No projects in need of attention yet.");
        }
    }

    public String inoaProjects2GetText(ArrayList<Task> tasks) {
        try {
            return (tasks.get(1).getTitle());
        } catch (IndexOutOfBoundsException e) {
            return ("None.");
        }
    }

    public String inoaProjects3GetText(ArrayList<Task> tasks) {
        try {
            return (tasks.get(2).getTitle());
        } catch (IndexOutOfBoundsException e) {
            return ("None.");
        }
    }

    /*private void updateHomepage() {
        this.dispose();
        HiProject hiProject = new Serialization(String.format("%s\\HiProject.data", System.getProperty("user.dir"))).load();
        try {
            User updatedConnectedUser = hiProject.getUsers().getUser(connectedUser.getEmail());
            new Homepage(updatedConnectedUser).setVisible(true);
        } catch (UserDoesntExistException e) {
            e.printStackTrace();
        }
    }*/

    private void updateHomepage() {
        this.dispose();
        HiProject hiProject = new Serialization(String.format("%s\\HiProject.data", System.getProperty("user.dir"))).load();
        try {
            User updatedConnectedUser = hiProject.getUsers().getUser(connectedUser.getEmail());
            new Homepage(updatedConnectedUser).setVisible(true);
        } catch (UserDoesntExistException e) {
            e.printStackTrace();
        }
    }

    public Project getSelectedProject() {
        return connectedUser.getProjects().getProjectByTitle(projectListComboBox.getItemAt(projectListComboBox.getSelectedIndex()));
    }

    private void setSelectedProjectValuesText() {
        if (projectListComboBox.getSelectedIndex() == 0) {
            sppSelectedProjectName.setText("Please select a project.");
            sppSelectedProjectOwner.setText("");
            sppSelectedProjectEndDateValue.setText("");
            sppSelectedProjectStartDateValue.setText("");
            sppSelectedProjectStateValue.setText("");
            sppSelectedProjectDescriptionValue.setText("");
        } else {
            sppSelectedProjectName.setText(String.valueOf(getSelectedProject().getTitle()));
            sppSelectedProjectOwner.setText(String.valueOf(getSelectedProject().getOwner().getName()));
            sppSelectedProjectEndDateValue.setText(String.valueOf(getSelectedProject().getEndDate()));
            sppSelectedProjectStartDateValue.setText(String.valueOf(getSelectedProject().getBeginDate()));
            sppSelectedProjectStateValue.setText(String.valueOf(getSelectedProject().getProjectState()));
            sppSelectedProjectDescriptionValue.setText("\"" + getSelectedProject().getDescription() + "\"");
            tasksListsList.setModel(fillTasksListModel());
            sppSelectedProjectAssociatedUsersList.setModel(fillUsersListModel());
        }
    }

    private void setDashboardValues() {
        completedProjectsValueLabel.setText(String.format("%d/%d", 0, Homepage.connectedUser.getProjects().getProjects().size()));
        ongoingProjectsValueLabel.setText(String.format("%d/%d", 0, Homepage.connectedUser.getProjects().getProjects().size()));
        lateProjectsValueLabel.setText(String.format("%d/%d", 0, Homepage.connectedUser.getProjects().getProjects().size()));

        inoaProject1ValueLabel.setText(inoaProjects1GetText(connectedUser.getProjects().biggestProject().completedTasks()));
        inoaProject2ValueLabel.setText(inoaProjects2GetText(connectedUser.getProjects().biggestProject().completedTasks()));
        inoaProject3ValueLabel.setText(inoaProjects3GetText(connectedUser.getProjects().biggestProject().completedTasks()));

        bpPeopleInvolvedValueLabel.setText(String.valueOf(connectedUser.getProjects().biggestProject().getContributors().size()));
        bpNameValueLabel.setText("\"" + connectedUser.getProjects().biggestProject().getTitle() + "\"");
        bpCompletedTasksValueLabel.setText(String.valueOf(connectedUser.getProjects().biggestProject().completedTasks().size()));
    }

    public void disableEditIfNotOwner(User user) {
        if (projectListComboBox.getSelectedIndex() != 0) {
            if (!getSelectedProject().getOwner().equals(new Manager(user))) {
                sppSelectedProjectEditProjectButton.setVisible(false);
                sppSelectedProjectEditProjectButtonLabel.setVisible(false);
            }
        }
    }

    public void removeProject() {
        System.out.println(connectedUser.getProjects());
        int projectKey = hiProject.getProjects().getProjectByTitle(projectListComboBox.getItemAt(projectListComboBox.getSelectedIndex())).getProjectID();
        ProjectsList updatedProjects = hiProject.getProjects();
        updatedProjects.remove(projectKey);
        hiProject.setProjects(updatedProjects);

        ProjectsList updatedUsersProject = connectedUser.getProjects();
        updatedUsersProject = connectedUser.getProjects();
        updatedUsersProject.remove(projectKey);
        connectedUser.setProjects(updatedUsersProject);
        serialization.save(hiProject);

        System.out.println(connectedUser.getProjects());
        updateHomepage();
    }

    private DefaultListModel fillTasksListModel() {
        if (projectListComboBox.getSelectedIndex() == 0) {
            return new javax.swing.DefaultListModel<String>() {
                String[] strings = {""};

                public int getSize() {
                    return strings.length;
                }

                public String getElementAt(int i) {
                    return strings[i];
                }
            };
        } else {
            listModelTasks = new DefaultListModel();
            for (int i = 0; i < getSelectedProject().getLists().size(); i++) {
                listModelTasks.addElement(getSelectedProject().getLists().get(i).getTitle());
            }
            return listModelTasks;
        }
    }

    private DefaultListModel fillUsersListModel() {
        if (projectListComboBox.getSelectedIndex() == 0) {
            return new javax.swing.DefaultListModel<String>() {
                String[] strings = {""};

                public int getSize() {
                    return strings.length;
                }

                public String getElementAt(int i) {
                    return strings[i];
                }
            };
        } else {
            listModelUsers = new DefaultListModel();
            for (int i = 0; i < getSelectedProject().getContributors().size(); i++) {
                listModelUsers.addElement(getSelectedProject().getContributors().get(i).getName());
            }
            return listModelUsers;
        }
    }

    public void fillTasksListList(ArrayList<TasksList> tasksLists) {
        listModelTasks = new DefaultListModel();
        for (int i = 0; i < tasksLists.size(); i++) {
            listModelTasks.addElement(tasksLists.get(i).getTitle());
        }
        this.tasksListsList = new JList(listModelTasks);
    }

    public void fillUsersLists(ArrayList<Contributor> contributorsList) {
        listModelUsers = new DefaultListModel();
        for (int i = 0; i < contributorsList.size(); i++) {
            listModelTasks.addElement(contributorsList.get(i).getName());
        }
        this.tasksListsList = new JList(listModelUsers);
    }

    public void checksToFillTasksLists() {
        if (projectListComboBox.getSelectedIndex() == 0) {
            return;
        } else {
            fillTasksListList(getSelectedProject().getLists());
        }
    }

    public void checksToFillUsersLists() {
        if (projectListComboBox.getSelectedIndex() == 0) {
            return;
        } else {
            fillUsersLists(getSelectedProject().getContributors());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addProjectButton;
    private javax.swing.JLabel addTaskButton;
    private javax.swing.JLabel addTasksListsButton;
    private javax.swing.JLabel addUserToProject;
    private javax.swing.JLabel addUserToProjectLabel;
    private javax.swing.JScrollPane associatedUsersScrollPane;
    private javax.swing.JLabel biggestProjectLabel;
    private javax.swing.JLabel bpCompletedTasksLabel;
    private javax.swing.JLabel bpCompletedTasksValueLabel;
    private javax.swing.JLabel bpNameValueLabel;
    private javax.swing.JLabel bpPeopleInvolvedLabel;
    private javax.swing.JLabel bpPeopleInvolvedValueLabel;
    private javax.swing.JLabel completedProjectsLabel;
    private javax.swing.JLabel completedProjectsValueLabel;
    private javax.swing.JLabel dashboardBackground;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JLabel editProfileButton;
    private javax.swing.JLabel editProfileLabel;
    private javax.swing.JLabel editTasksListsButton;
    private javax.swing.JLabel exitButton;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JLabel homepageBackground;
    private javax.swing.JLabel inNeedOfAttentionLabel;
    private javax.swing.JLabel inoaProject1ValueLabel;
    private javax.swing.JLabel inoaProject2ValueLabel;
    private javax.swing.JLabel inoaProject3ValueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lateProjectsLabel;
    private javax.swing.JLabel lateProjectsValueLabel;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JLabel markAsCompleteButton;
    private javax.swing.JLabel ongoingProjectsLabel;
    private javax.swing.JLabel ongoingProjectsValueLabel;
    private javax.swing.JComboBox<String> projectListComboBox;
    private javax.swing.JLabel removeProjectButton;
    private javax.swing.JLabel removeTaskButton;
    private javax.swing.JLabel removeTasksListsButton;
    private javax.swing.JLabel removeUserFromProject;
    private javax.swing.JLabel removeUserFromProjectLabel;
    private javax.swing.JLabel selectedProjectBackground;
    private javax.swing.JPanel selectedProjectPanel;
    private javax.swing.JLabel sppSelectedProjectAssociatedUsersLabel;
    private javax.swing.JList<String> sppSelectedProjectAssociatedUsersList;
    private javax.swing.JLabel sppSelectedProjectDescriptionLabel;
    private javax.swing.JTextArea sppSelectedProjectDescriptionValue;
    private javax.swing.JLabel sppSelectedProjectEditProjectButton;
    private javax.swing.JLabel sppSelectedProjectEditProjectButtonLabel;
    private javax.swing.JLabel sppSelectedProjectEndDateLabel;
    private javax.swing.JLabel sppSelectedProjectEndDateValue;
    private javax.swing.JLabel sppSelectedProjectName;
    private javax.swing.JLabel sppSelectedProjectOwner;
    private javax.swing.JLabel sppSelectedProjectStartDateLabel;
    private javax.swing.JLabel sppSelectedProjectStartDateValue;
    private javax.swing.JLabel sppSelectedProjectStateLabel;
    private javax.swing.JLabel sppSelectedProjectStateValue;
    private javax.swing.JLabel switchUserButton;
    private javax.swing.JLabel switchUserLabel;
    private javax.swing.JLabel tasksListsLabel;
    private javax.swing.JList<String> tasksListsList;
    private javax.swing.JScrollPane tasksListsScrollPane;
    private javax.swing.JLabel tasksTableLabel;
    private javax.swing.JLabel viewDashboardButton;
    private javax.swing.JLabel viewProjectButton;
    private javax.swing.JLabel viewTaskButton;
    // End of variables declaration//GEN-END:variables
}
